@model WebShopPet.Models.PRODUCT

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container">
    @using (Html.BeginForm("Create", "PRODUCTs", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Tạo mới sản phẩm</h4>
        @if (ViewBag.Error != null)
        {
            <br />
            <div class="alert alert-danger">@ViewBag.Error</div>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CATEGORY_ID, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CATEGORY_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CATEGORY_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BRAND_ID, "Thương hiệu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BRAND_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BRAND_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NAME, "Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IMPORT_PRICE, "Giá nhập", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IMPORT_PRICE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IMPORT_PRICE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PRICE, "Giá bán", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PRICE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PRICE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.COLOR, "Màu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.COLOR, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COLOR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SIZE, "Kích cỡ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SIZE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SIZE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DESCRIPTION, "Thông tin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AVAILABLE_QUANTITY, "Hàng tồn", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AVAILABLE_QUANTITY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AVAILABLE_QUANTITY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QUANTITY_SOLD, "Đã bán", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QUANTITY_SOLD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QUANTITY_SOLD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PRIMARY_IMAGE, "Ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="output" src="~/Assets/User/img/cart.png" width="250" height="200" />
                <p><label for="ufile" style="cursor: pointer;">Chọn file ảnh</label></p>
                <input name="IMAGEFile" id="ufile" type="file" style="display:none;" onchange="loadFile(event)" />
                @Html.ValidationMessageFor(model => model.PRIMARY_IMAGE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
</div>

<script>
    var loadFile = function (event) {
        var image = document.getElementById('output');
        image.src = URL.createObjectURL(event.target.files[0]);
    }
</script>
<div>
    @Html.ActionLink("Quay lại", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
